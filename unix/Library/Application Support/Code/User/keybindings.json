[
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.quickOpen"
  },
  // Tab navigation
  {
    "key": "ctrl+pagedown",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "shift+cmd+]",
    "command": "-workbench.action.nextEditor"
  },
  {
    "key": "ctrl+pageup",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "shift+cmd+[",
    "command": "-workbench.action.previousEditor"
  },
  // Zoom in/out
  {
    "key": "cmd+-",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "cmd+8",
    "command": "-extension.customWindowZoomOut"
  },
  {
    "key": "cmd+-",
    "command": "extension.customWindowZoomOut"
  },
  {
    "key": "cmd+=",
    "command": "-workbench.action.zoomIn"
  },
  {
    "key": "cmd+9",
    "command": "-extension.customWindowZoomIn"
  },
  {
    "key": "cmd+=",
    "command": "extension.customWindowZoomIn"
  },
  {
    "key": "cmd+;",
    "command": "extension.customWindowZoomIn"
  },
  // Cursor words to left
  {
    "key": "ctrl+alt+left",
    "command": "-cursorWordPartLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "-cursorWordLeft",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorWordPartLeft",
    "when": "textInputFocus"
  },
  // Cursor words to right
  {
    "key": "ctrl+alt+right",
    "command": "-cursorWordPartRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "-cursorWordEndRight",
    "when": "textInputFocus"
  },
  {
    "key": "alt+right",
    "command": "cursorWordPartRight",
    "when": "textInputFocus"
  },
  // delete per words
  {
    "key": "ctrl+alt+backspace",
    "command": "-deleteWordPartLeft",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+backspace",
    "command": "deleteWordPartLeft"
  },
  {
    "key": "ctrl+alt+delete",
    "command": "-deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+delete",
    "command": "deleteWordPartRight",
    "when": "textInputFocus && !editorReadonly"
  },
  // Select words to left
  {
    "key": "ctrl+shift+alt+left",
    "command": "-cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+left",
    "command": "cursorWordPartLeftSelect",
    "when": "textInputFocus"
  },
  // Select words to right
  {
    "key": "ctrl+shift+alt+right",
    "command": "-cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  {
    "key": "shift+alt+right",
    "command": "cursorWordPartRightSelect",
    "when": "textInputFocus"
  },
  // Go to next member
  {
    "key": "ctrl+down",
    "command": "-gotoNextPreviousMember.nextMember"
  },
  {
    "key": "ctrl+cmd+down",
    "command": "gotoNextPreviousMember.nextMember"
  },
  // Go to previous member
  {
    "key": "ctrl+up",
    "command": "-gotoNextPreviousMember.previousMember"
  },
  {
    "key": "ctrl+cmd+up",
    "command": "gotoNextPreviousMember.previousMember"
  },
  // Fold/Unfold
  {
    "key": "shift+cmd+[",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "shift+cmd+]",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "alt+cmd+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  // Go forward
  {
    "key": "alt+]",
    "command": "workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  {
    "key": "ctrl+shift+-",
    "command": "-workbench.action.navigateForward",
    "when": "canNavigateForward"
  },
  // Go backward
  {
    "key": "alt+[",
    "command": "workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  // Cursor words in terminal
  {
    "key": "cmd+ctrl+left",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u001b[1;5D"
    },
    "when": "terminalFocus && !terminalTextSelected"
  },
  {
    "key": "cmd+ctrl+right",
    "command": "workbench.action.terminal.sendSequence",
    "args": {
      "text": "\u001b[1;5C"
    },
    "when": "terminalFocus && !terminalTextSelected"
  },
  // Copy & paste in terminal
  {
    "key": "cmd+shift+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus"
  },
  // Split terminal
  {
    "key": "cmd+shift+\\",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus"
  },
  // Focus previous/next terminal
  {
    "key": "cmd+shift+left",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+shift+right",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus"
  },
  // Git
  {
    "key": "alt+shift+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  // Copilot
  {
    "key": "shift+cmd+i",
    "command": "-workbench.action.chat.openEditSession"
  },
  // Avoid collision with unstage command
  {
    "key": "cmd+k cmd+n",
    "command": "-extension.search",
    "when": "!terminalFocus"
  },
  // For Bookmark extension
  {
    "key": "alt+cmd+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  }
]

# Thanks to https://qiita.com/kalafinalice/items/c02c0345293fe60af6e5

# ------------------------------ basic ------------------------------

set -g default-shell ${SHELL}

# 256色端末を使用する
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'

# Escキーの遅延を解消
# 0 にすると謎の文字が出現する (https://github.com/microsoft/WSL/issues/5931)
set -s escape-time 50

# ------------------------------ color ------------------------------

# アクティブなペインのみ白っぽく変更（真っ黒は 232）
set -g window-style 'bg=colour238'
set -g window-active-style 'bg=colour235'

# pane の border の色
set -g pane-border-style 'fg=colour111'
set -g pane-active-border-style 'fg=colour87'

# ------------------------------ status line ------------------------------

# window-status を中央揃えで配置する
set-option -g status-justify "centre"

# status line の背景色を指定する。
set-option -g status-bg "colour240"

# status line の文字色を指定する。
set-option -g status-fg "colour255"

# status-left の最大の長さを指定する。
set-option -g status-left-length 20

# status-left のフォーマットを指定する。
set-option -g status-left "#[fg=colour255,bg=colour68]Session: #S #[default]"

# window-status のフォーマットを指定する。
set-window-option -g window-status-format " #I: #W "

# カレントウィンドウの window-status のフォーマットを指定する
set-window-option -g window-status-current-format "#[fg=colour233,bg=colour111,bold] #I: #W #[default]"

# status-right の最大の長さを指定する。
set-option -g status-right-length 60

# status-right のフォーマットを指定する。
set-option -g status-right "#[fg=colour255,bg=colour68] #h | LA: #(cut -d' ' -f-3 /proc/loadavg) | %m/%d %H:%M:%S#[default]"

# status line を更新する間隔を1秒にする
set-option -g status-interval 1

# ------------------------------ 操作系 ------------------------------

# prefixキーの割り当て(Ctrl + b)
set -g prefix C-b

# マウス操作を有効化
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# コマンドモードでの選択方法を vim 風に変更
set-window-option -g mode-keys vi
# TODO: WLS でクリップボートとの連携 (tmux-yank に任せる)
# v で選択を開始
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# y キーで選択を終了
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ip && xsel -op | xsel -bi"
# Enter キーで選択を終了
# unbind -T copy-mode-vi Enter
# bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel --input --clipboard"
# マウスカーソルでドラッグして選択を終了
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel --input --clipboard"


# ------------------------------ window ------------------------------

# カレントディレクトリを引き継いで、新しいウインドウ作成
bind c new-window -c '#{pane_current_path}'

# カレントディレクトリを引き継ぎ、 prefix + '-' で水平分割
bind - split-window -v -c '#{pane_current_path}'

# カレントディレクトリを引き継ぎ、 prefix + '|' で垂直分割
bind | split-window -h -c '#{pane_current_path}'

# prefix + X でウィンドウを削除するかの確認を表示
bind C-x confirm-before -p "This operation will kill 'WINDOW', not pane. kill-window #I? (y/n)" kill-window

# ------------------------------ pane ------------------------------

# ペインの移動をprefixなしで行う（Shift + 矢印キー）
# bind -n S-left select-pane -L
# bind -n S-down select-pane -D
# bind -n S-up select-pane -U
# bind -n S-right select-pane -R

bind-key -r H resize-pane -L 2
bind-key -r J resize-pane -D 2
bind-key -r K resize-pane -U 2
bind-key -r L resize-pane -R 2

# ペインの順次移動をCtr + n に設定しない
unbind -T root C-n

# 並列実行のトグル化
bind e setw synchronize-panes \; display "synchronize-panes #{?pane_synchronized,on,off}"
